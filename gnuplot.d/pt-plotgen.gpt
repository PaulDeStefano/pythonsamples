## GNUplot script for making T2K TOF Precise Time plots

#useCSV="$0"
#print "DEBUG: useCSV=".useCSV
#print "DEBUG: startTime=".startTime
#print "DEBUG: outFile=".outFile
#print "DEBUG: pltCmd=".pltCmd
#print "DEBUG: pltTitle=".pltTitle
#print "DEBUG: fileList=".fileList
#print "DEBUG: labelList=".labelList

load 'pt-set4time.gp'         # X-axis is time
load 'pt-setTerm.gp'          # plot as PNG graphic
# input file is CSV, if indicated
if ( ! exists( "useCSV" ) ) { useCSV="no" }
if ( useCSV eq "CSV" ) { load 'pt-set4csv.gp'; }

set title pltTitle            # set title

# selected the optimal x range
if ( exists( "startTime" ) ) {
  set xrange [ startTime : * ]
} else {
  startTime = "*"
}
if ( exists( "endTime" ) ) {
  set xrange [ startTime : endTime ]
}
#show xrange # DEBUG

set output outFile.".png"

if ( exists( "yTitle" ) ) {
  set ylabel yTitle
} else {
  set ylabel 'time diff (ns)'
} 
set grid
set macros
set key opaque
set key inside left
style1 = "points pointtype 1 linewidth 2 linecolor 1"
style2 = "points pointtype 12 pointsize 1 linecolor 1"
styleF1 = "circles"
styleF2 = "dots"
if ( exist( "styleExt" ) ) { 
  style3 = styleExt
} else {
  style3 = style2
}
#print "DEBUG: using style=".style3

if( exists("labelList") ) {
  #print "DEBUG: using label list"
  if( exists("fillAlpha") ) {
    set style fill transparent solid fillAlpha noborder
    plot for [t in labelList ] t.".dat" using @pltCmd with @styleF1 title t
  } else {
    plot for [t in labelList ] t.".dat" using @pltCmd with @style3 title t
  }
} else {
  #print "DEBUG: using file list"
  plot for [f in fileList] f using @pltCmd with @style3 title ''
}
